// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class MolochTokenCreated extends ethereum.Event {
  get params(): MolochTokenCreated__Params {
    return new MolochTokenCreated__Params(this);
  }
}

export class MolochTokenCreated__Params {
  _event: MolochTokenCreated;

  constructor(event: MolochTokenCreated) {
    this._event = event;
  }

  get molochToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get moloch(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get symbol(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class MolochTokenFactory extends ethereum.SmartContract {
  static bind(address: Address): MolochTokenFactory {
    return new MolochTokenFactory("MolochTokenFactory", address);
  }

  summonMolochToken(_moloch: Address, _name: string, _symbol: string): Address {
    let result = super.call(
      "summonMolochToken",
      "summonMolochToken(address,string,string):(address)",
      [
        ethereum.Value.fromAddress(_moloch),
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_symbol)
      ]
    );

    return result[0].toAddress();
  }

  try_summonMolochToken(
    _moloch: Address,
    _name: string,
    _symbol: string
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "summonMolochToken",
      "summonMolochToken(address,string,string):(address)",
      [
        ethereum.Value.fromAddress(_moloch),
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_symbol)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  template(): Address {
    let result = super.call("template", "template():(address)", []);

    return result[0].toAddress();
  }

  try_template(): ethereum.CallResult<Address> {
    let result = super.tryCall("template", "template():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _template(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SummonMolochTokenCall extends ethereum.Call {
  get inputs(): SummonMolochTokenCall__Inputs {
    return new SummonMolochTokenCall__Inputs(this);
  }

  get outputs(): SummonMolochTokenCall__Outputs {
    return new SummonMolochTokenCall__Outputs(this);
  }
}

export class SummonMolochTokenCall__Inputs {
  _call: SummonMolochTokenCall;

  constructor(call: SummonMolochTokenCall) {
    this._call = call;
  }

  get _moloch(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class SummonMolochTokenCall__Outputs {
  _call: SummonMolochTokenCall;

  constructor(call: SummonMolochTokenCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
